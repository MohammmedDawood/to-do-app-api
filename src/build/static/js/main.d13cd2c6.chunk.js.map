{"version":3,"sources":["redux/todoSlice.js","components/AddTodoForm.js","components/TodoItem.js","components/TodoList.js","components/TotalCompleteItems.js","App.js","redux/store.js","index.js"],"names":["getTodosAsync","createAsyncThunk","a","fetch","response","status","json","todos","addTodoAsync","payload","method","headers","body","JSON","stringify","console","log","changeStatusTodoAsync","id","deleteTodoAsync","todoSlice","createSlice","name","initialState","reducers","addTodo","state","action","newTodo","title","description","deadLine","priority","startDate","responsiblePerson","push","changeStatus","index","findIndex","todo","deleteTodo","filter","extraReducers","fulfilled","actions","AddTodoForm","dispatch","useDispatch","useState","setTitle","setDescription","setDeadLine","setPriority","setStatus","setStartDate","setResponsiblePerson","onSubmit","event","preventDefault","className","type","placeholder","value","onChange","target","defaultValue","TodoItem","showTodoInfo","setShowTodoInfo","statusvalue","onClick","icon","faArrowCircleUp","faArrowCircleDown","faTrash","TodoList","statusfilter","setStatusfilter","priorityfilter","setPriorityfilter","filterdTodos","setFilterdTodos","useSelector","useEffect","filterObj","length","map","TotalCompleteItems","tasksDone","item","App","showForm","setShowForm","configureStore","reducer","todoReducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.d13cd2c6.chunk.js","sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\nexport const getTodosAsync = createAsyncThunk(\r\n  \"todo/getTodosAsync\",\r\n  async () => {\r\n    const response = await fetch(\r\n      \"https://todo-app-react-travolic.herokuapp.com/todos\"\r\n    );\r\n    if (response.status === 200) {\r\n      const todos = await response.json();\r\n      return { todos };\r\n    }\r\n  }\r\n);\r\nexport const addTodoAsync = createAsyncThunk(\r\n  \"todo/addTodoAsync\",\r\n  async (payload) => {\r\n    const response = await fetch(\r\n      \"https://todo-app-react-travolic.herokuapp.com/todos\",\r\n      {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(payload),\r\n      }\r\n    );\r\n    if (response.status === 200) {\r\n      console.log(payload);\r\n      const todos = await response.json();\r\n      return { todos };\r\n    }\r\n  }\r\n);\r\nexport const changeStatusTodoAsync = createAsyncThunk(\r\n  \"todo/changeStatusTodoAsync\",\r\n  async (payload) => {\r\n    const response = await fetch(\r\n      `https://todo-app-react-travolic.herokuapp.com/todos/${payload.id}`,\r\n      {\r\n        method: \"PATCH\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ status: payload.status }),\r\n      }\r\n    );\r\n    if (response.status === 200) {\r\n      console.log(payload);\r\n      const todos = await response.json();\r\n      return { todos };\r\n    }\r\n  }\r\n);\r\nexport const deleteTodoAsync = createAsyncThunk(\r\n  \"todo/deleteTodoAsync\",\r\n  async (payload) => {\r\n    const response = await fetch(\r\n      `https://todo-app-react-travolic.herokuapp.com/todos/${payload.id}`,\r\n      {\r\n        method: \"DELETE\",\r\n      }\r\n    );\r\n    if (response.status === 200) {\r\n      console.log(payload);\r\n      return { id: payload.id };\r\n    }\r\n  }\r\n);\r\n\r\nconst todoSlice = createSlice({\r\n  name: \"todos\",\r\n  initialState: [],\r\n  //define actions(reducer)\r\n  reducers: {\r\n    //Add new to to do where the action type and payload comes from the component\r\n    //and the state is the current state\r\n    addTodo: (state, action) => {\r\n      const newTodo = {\r\n        id: action.payload.id,\r\n        title: action.payload.title,\r\n        description: action.payload.description,\r\n        deadLine: action.payload.deadLine,\r\n        priority: action.payload.priority,\r\n        status: action.payload.status,\r\n        startDate: action.payload.startDate,\r\n        responsiblePerson: action.payload.responsiblePerson,\r\n      };\r\n      //   console.log(newTodo);\r\n      state.push(newTodo);\r\n      //   console.log(state);\r\n    },\r\n    changeStatus: (state, action) => {\r\n      const index = state.findIndex((todo) => todo.id === action.payload.id);\r\n      state[index].status = action.payload.status;\r\n    },\r\n    deleteTodo: (state, action) => {\r\n      // deleteTodo is the action\r\n      return state.filter((todo) => todo.id !== action.payload.id);\r\n    },\r\n  },\r\n  // specify additional reducers for thunk apis\r\n  extraReducers: {\r\n    [getTodosAsync.fulfilled]: (state, action) => {\r\n      console.log(\"data Fetched successfully!\");\r\n      return action.payload.todos;\r\n    },\r\n    [addTodoAsync.fulfilled]: (state, action) => {\r\n      console.log(\"data Added successfully!\");\r\n      state.push(action.payload.todos);\r\n    },\r\n    [changeStatusTodoAsync.fulfilled]: (state, action) => {\r\n      console.log(\"data Status Changed successfully successfully!\");\r\n      const index = state.findIndex((todo) => {\r\n        // console.log(action.payload.todos.id);\r\n        // console.log(todo.id);\r\n        return todo.id === action.payload.todos.id;\r\n      });\r\n      // console.log(index);\r\n      state[index].status = action.payload.todos.status;\r\n    },\r\n    [deleteTodoAsync.fulfilled]: (state, action) => {\r\n      console.log(\"data Deleted successfully successfully!\");\r\n      // console.log(todo.id);\r\n      // console.log(action.payload.id);\r\n      console.log((todo) => todo.id !== action.payload.id);\r\n      return state.filter((todo) => todo.id !== action.payload.id);\r\n    },\r\n  },\r\n});\r\n\r\n//export addTodo action\r\nexport const { addTodo, deleteTodo, changeStatus } = todoSlice.actions;\r\n\r\n//export reducer\r\nexport default todoSlice.reducer;\r\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { addTodoAsync } from \"../redux/todoSlice\";\n\nconst AddTodoForm = () => {\n  const dispatch = useDispatch();\n\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [deadLine, setDeadLine] = useState(\"\");\n  const [priority, setPriority] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [startDate, setStartDate] = useState(\"\");\n  const [responsiblePerson, setResponsiblePerson] = useState(\"\");\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    // console.log(\"title: \" + title);\n    // console.log(\"description: \" + description);\n    // console.log(\"deadLine: \" + deadLine);\n    // console.log(\"priority: \" + priority);\n    // console.log(\"status: \" + status);\n    // console.log(\"startDate: \" + startDate);\n    // console.log(\"responsiblePerson: \" + responsiblePerson);\n\n    // dispatch event to redux\n    dispatch(\n      addTodoAsync({\n        title,\n        description,\n        deadLine,\n        priority,\n        status,\n        startDate,\n        responsiblePerson,\n      })\n    );\n\n    // reset form\n    setTitle(\"\");\n    setDescription(\"\");\n    setDeadLine(\"\");\n    setPriority(\"\");\n    setStatus(\"\");\n    setStartDate(\"\");\n    setResponsiblePerson(\"\");\n  };\n\n  return (\n    <form\n      onSubmit={onSubmit}\n      className=\"form-inline row mt-3 mb-3 justify-content-md-center\"\n    >\n      {/* to do title */}\n      <div className=\"col-lg-6 col-md-12\">\n        <div className=\"input-group mb-2 mr-sm-2 col-3\">\n          <span className=\"input-group-text\">Title</span>\n          <input\n            type=\"text\"\n            className=\"form-control \"\n            placeholder=\"Add title...\"\n            value={title}\n            onChange={(event) => setTitle(event.target.value)}\n          ></input>\n        </div>\n      </div>\n\n      {/* to do description */}\n      <div className=\"col-lg-12 col-md-12\">\n        <div className=\"input-group mb-2 mr-sm-2 col-3\">\n          <span className=\"input-group-text mb-2 mr-sm-2\">Description</span>\n          <textarea\n            className=\"form-control mb-2 mr-sm-2\"\n            placeholder=\"Add description...\"\n            value={description}\n            onChange={(event) => setDescription(event.target.value)}\n          ></textarea>\n        </div>\n      </div>\n\n      {/* to do Priority */}\n      <div className=\"col-lg-3 col-md-12\">\n        <div className=\"input-group mb-2 mr-sm-2 col-3\">\n          <span className=\"input-group-text mb-2 mr-sm-2\">Priority</span>\n          <select\n            className=\"form-select mb-2 mr-sm-2\"\n            defaultValue={priority}\n            onChange={(event) => setPriority(event.target.value)}\n          >\n            <option>Choose priority...</option>\n            <option>High</option>\n            <option>Medium</option>\n            <option>Low</option>\n          </select>\n        </div>\n      </div>\n\n      {/* to do Status */}\n      <div className=\"col-lg-3 col-md-12\">\n        <div className=\"input-group mb-2 mr-sm-2 col-3\">\n          <span className=\"input-group-text mb-2 mr-sm-2\">Status</span>\n          <select\n            className=\"form-select mb-2 mr-sm-2\"\n            defaultValue={status}\n            onChange={(event) => setStatus(event.target.value)}\n          >\n            <option>Choose Status...</option>\n            <option>To Do</option>\n            <option>In Progress</option>\n            <option>Done</option>\n          </select>\n        </div>\n      </div>\n\n      {/* to do ResponsiblePerson */}\n      <div className=\"col-lg-6 col-md-12\">\n        <div className=\"input-group mb-2 mr-sm-2 col-3\">\n          <span className=\"input-group-text mb-2 mr-sm-2\">\n            Responsible Person\n          </span>\n          <select\n            className=\"form-select mb-2 mr-sm-2\"\n            defaultValue={responsiblePerson}\n            onChange={(event) => setResponsiblePerson(event.target.value)}\n          >\n            <option>Choose Responsible Person...</option>\n            <option>Ahmed</option>\n            <option>Mohammed</option>\n            <option>Dawood</option>\n          </select>\n        </div>\n      </div>\n\n      {/* to do Deadline */}\n      <div className=\"col-lg-6 col-md-12\">\n        <div className=\"input-group mb-2 mr-sm-2 col-3\">\n          <span className=\"input-group-text mb-2 mr-sm-2\">Deadline</span>\n          <input\n            type=\"date\"\n            className=\"form-control mb-2 mr-sm-2\"\n            placeholder=\"Add deadline...\"\n            value={deadLine}\n            onChange={(event) => setDeadLine(event.target.value)}\n          ></input>\n        </div>\n      </div>\n\n      {/* to do startdate */}\n      <div className=\"col-lg-6 col-md-12\">\n        <div className=\"input-group mb-2 mr-sm-2 col-3\">\n          <span className=\"input-group-text mb-2 mr-sm-2\">Start Date</span>\n          <input\n            type=\"date\"\n            className=\"form-control mb-2 mr-sm-2\"\n            placeholder=\"Add Start Date...\"\n            value={startDate}\n            onChange={(event) => setStartDate(event.target.value)}\n          ></input>\n        </div>\n      </div>\n\n      {/* to do Submit Button */}\n\n      <div className=\"col-lg-6 col-md-12\">\n        <button type=\"submit\" className=\"btn btn-primary mb-2 col-12\">\n          Add Todo\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default AddTodoForm;\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { deleteTodoAsync, changeStatusTodoAsync } from \"../redux/todoSlice\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faTrash,\n  faArrowCircleDown,\n  faArrowCircleUp,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nconst TodoItem = ({ todo }) => {\n  const dispatch = useDispatch();\n  const deleteTodobtn = () => {\n    console.log(\"delete\");\n    console.log(todo.id);\n    // dispatch event to redux\n    dispatch(\n      deleteTodoAsync({\n        id: todo.id,\n      })\n    );\n  };\n  const ChangeStatusTodobtn = (statusvalue) => {\n    console.log(\"Change Status\");\n    console.log(todo.id);\n    // dispatch event to redux\n    dispatch(\n      changeStatusTodoAsync({\n        id: todo.id,\n        status: statusvalue,\n      })\n    );\n  };\n\n  const [showTodoInfo, setShowTodoInfo] = useState(false);\n  return (\n    <li className=\"list-group-item\">\n      {/* Todo Header */}\n      <div className=\"d-flex justify-content-between row\">\n        <div className=\"d-flex align-items-center  m-1  col-sm-12 col-md-3 col-lg-3\">\n          <b>\n            <h1>{todo.title}</h1>\n          </b>\n        </div>\n        <div className=\"d-flex align-items-center  col-sm-12 col-md-3 col-lg-3\">\n          <select\n            className=\"form-select mr-sm-1\"\n            defaultValue={todo.status}\n            onChange={(event) => ChangeStatusTodobtn(event.target.value)}\n          >\n            <option>To Do</option>\n            <option>In Progress</option>\n            <option>Done</option>\n          </select>\n          <button\n            className={\n              showTodoInfo ? \"btn btn-danger m-1\" : \"btn btn-success m-1\"\n            }\n            onClick={() => setShowTodoInfo(!showTodoInfo)}\n          >\n            <FontAwesomeIcon\n              icon={showTodoInfo ? faArrowCircleUp : faArrowCircleDown}\n            />\n          </button>\n          <button\n            id={todo.id}\n            className=\"btn btn-danger m-1\"\n            onClick={() => deleteTodobtn()}\n          >\n            <FontAwesomeIcon icon={faTrash} />\n          </button>\n        </div>\n      </div>\n      {/* to do Description */}\n      {showTodoInfo && (\n        <div className=\"card\">\n          <div className=\"card-body\">\n            <h5 className=\"card-title\">\n              Responsible Person: {todo.responsiblePerson}\n            </h5>\n            <h6 className=\"card-subtitle mb-2 text-muted\">\n              Status: {todo.status}\n            </h6>\n            <h6 className=\"card-subtitle mb-2 text-muted\">\n              Priority: {todo.priority}\n            </h6>\n            <h6 className=\"card-subtitle mb-2 text-muted\">\n              Start Date: {todo.startDate}\n            </h6>\n            <h6 className=\"card-subtitle mb-2 text-muted\">\n              Deadline: {todo.deadLine}\n            </h6>\n            <p className=\"card-text\">Description: {todo.description}</p>\n          </div>\n        </div>\n      )}\n    </li>\n  );\n};\n\nexport default TodoItem;\n","import React, { useEffect, useState } from \"react\";\nimport TodoItem from \"./TodoItem\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getTodosAsync } from \"../redux/todoSlice\";\n\nconst TodoList = () => {\n  const [statusfilter, setStatusfilter] = useState(\"Status...\");\n  const [priorityfilter, setPriorityfilter] = useState(\"Priority...\");\n  const [filterdTodos, setFilterdTodos] = useState();\n\n  const dispatch = useDispatch();\n  const todos = useSelector((state) => state.todos);\n  useEffect(() => {\n    dispatch(getTodosAsync());\n  }, [dispatch]);\n\n  const filter = (filterObj) => {\n    setFilterdTodos(\n      todos.filter(\n        (todo) =>\n          todo.status === filterObj.status ||\n          todo.priority === filterObj.priority\n      )\n    );\n  };\n  return (\n    <>\n      {/* // search element */}\n      <div className=\"row\">\n        <div className=\"col-sm-12 col-md-4 col-lg-4 \">\n          <div className=\"input-group mb-1 mr-sm-2\">\n            <h2> Filters:</h2>\n          </div>\n        </div>\n        <div className=\" col-sm-12 col-md-4 col-lg-4 \">\n          <div className=\"input-group mb-2 mr-sm-2\">\n            <select\n              className=\"form-select mr-sm-1\"\n              // defaultValue={todo.status}\n              onChange={(event) => {\n                filter({ status: event.target.value });\n                setStatusfilter(event.target.value);\n              }}\n            >\n              <option>Status...</option>\n              <option>To Do</option>\n              <option>In Progress</option>\n              <option>Done</option>\n            </select>\n          </div>\n        </div>\n        <div className=\" col-sm-12 col-md-4 col-lg-4 \">\n          <div className=\"input-group mb-2 mr-sm-2\">\n            <select\n              className=\"form-select mr-sm-1\"\n              onChange={(event) => {\n                filter({ priority: event.target.value });\n                setPriorityfilter(event.target.value);\n              }}\n            >\n              <option>Priority...</option>\n              <option>High</option>\n              <option>Medium</option>\n              <option>Low</option>\n            </select>\n          </div>\n        </div>\n        {/* <div className=\" col-sm-12 col-md-3 col-lg-3 \">\n          <div className=\"input-group mb-2 mr-sm-2\">\n            <select\n              className=\"form-select mr-sm-1\"\n              // defaultValue={todo.status}\n              // onChange={(event) => ChangeStatusTodobtn(event.target.value)}\n            >\n              <option>Status...</option>\n              <option>To Do</option>\n              <option>In Progress</option>\n              <option>Done</option>\n            </select>\n          </div>\n        </div> */}\n      </div>\n      {/* // todo list element */}\n      <ul className=\"list-group\">\n        {statusfilter !== \"Status...\" || priorityfilter !== \"Priority...\" ? (\n          filterdTodos.length > 0 ? (\n            filterdTodos.map((todo) => <TodoItem key={todo.id} todo={todo} />)\n          ) : (\n            <h1>No Result Found...</h1>\n          )\n        ) : (\n          todos.map((todo) => <TodoItem key={todo.id} todo={todo} />)\n        )}\n      </ul>\n    </>\n  );\n};\n\nexport default TodoList;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nconst TotalCompleteItems = () => {\n  const tasksDone = useSelector(\n    (state) => state.todos.filter((item) => item.status === \"Done\").length\n  );\n  return <h4 className=\"mt-3\">Total Complete Items: {tasksDone}</h4>;\n};\n\nexport default TotalCompleteItems;\n","import React, { useState } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport AddTodoForm from \"./components/AddTodoForm\";\nimport TodoList from \"./components/TodoList\";\nimport TotalCompleteItems from \"./components/TotalCompleteItems\";\n\nconst App = () => {\n  const [showForm, setShowForm] = useState(false);\n\n  return (\n    <div className=\"container bg-white p-4 mt-5\">\n      <div className=\"d-flex justify-content-between\">\n        <span className=\"d-flex align-items-center  m-2\">\n          <h1>My Todo List</h1>\n        </span>\n        <span className=\"d-flex align-items-center\">\n          <button\n            className={showForm ? \"btn btn-danger\" : \"btn btn-success\"}\n            onClick={() => setShowForm(!showForm)}\n          >\n            {showForm ? \"Close\" : \"Add a todo\"}\n          </button>\n        </span>\n      </div>\n      {showForm && <AddTodoForm />}\n      <TodoList />\n      <TotalCompleteItems />\n    </div>\n  );\n};\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport todoReducer from \"./todoSlice\";\r\n\r\n// manage all reducers\r\nexport default configureStore({\r\n  reducer: {\r\n    todos: todoReducer,\r\n  },\r\n});\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}